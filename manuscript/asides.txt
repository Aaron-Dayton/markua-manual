# ABC: Asides, Blurbs and Callouts

W> TODO - make executable etc

Need syntactic sugar for short asides and not to make life hell for long ones. An aside can have page breaks in it; a blurb cannot; a callout can but shouldn't if possible.

Callouts are blurbs that can be freely and creatively positioned near the manuscript position.  Asides and blurbs must be positioned at the manuscript position.

```
Syntax:

A> stuff

{aside}
stuff
{/aside}

B> stuff

{blurb}
stuff
{/blurb}

C> stuff

{callout}
stuff
{/callout}
```

Asides, blurbs and callouts can have an icon property. Markua processors that don't understand a given icon can ignore it.

There is some syntactic sugar for short blurbs with given classes. This sugar is specifically intended to help programming book authors.

Here's the sugar:

```
W> this is a warning blurb

T> this is a tip blurb

I> this is an info blurb

Q> this is a question blurb

these are equivalent to:

{class: warning}
B> this is a warning blurb

{class: tip}
B> this is a tip blurb

{class: info}
B> this is an info blurb

{class: question}
B> this is a question blurb
```

Besides this, there is support for adding arbitrary icons. Markua Processors can ignore these. Leanpub, for example, understands the icon attribute to reference an icon from Font Awesome. This is optional so that Markua processors can do creative things here, without worrying about breaking. If a Markua processor does not understand a given icon it must be silently ignored -- it is not acceptable to add a missing image or equivalent in it.

{icon: car}
A> you can't spell carbon without it

{icon: leanpub}
A> yes, we're in Font Awesome

{icon: github}
A> so is GitHub

## Asides

Asides are text which is formatted separately from the main text by a Markua processor. Asides can span multiple pages.

Asides can be created like block quotes, but using `A>` line prefixes. The same rules for newlines apply.

#### Example

##### Markua Syntax

{#input_aside_1}
```
This is a paragraph before the aside.

A> This is a paragraph in the aside.
A>
A> This is a
A> second paragraph in the aside
A> which contains newlines.
A>
A> This is a third paragraph in the aside.

This is a paragraph after the aside.
```

##### HTML Output

The HTML output for an Aside is simply a `div`, not a `section` or an `aside`, since an arbitrary aside is not something which is a top-level element of a book. (Also, some legacy EPUB readers would choke on `section` or `aside`.)

{#output_aside_1}
```
<p>This is a paragraph before the aside.</p>
<div class="aside">
<p>This is a paragraph in the aside.</p>
<p>This is a<br/>
second paragraph in the aside<br/>
which contains newlines.</p>
<p>This is a third paragraph in the aside.</p>
</div>
<p>This is a paragraph after the aside.</p>
```