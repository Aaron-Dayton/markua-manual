# Images

The Markua image syntax can be briefly described as follows:
`![Optional Alt Text](path/to/image.png "Optional Figure Caption")`

In Markua, images can be inserted in one of two ways:

1. As an **Inline** image, as part of the flow of text of a paragraph.
2. As a **Figure**, on a line by itself with blank lines above and below it.

W> There is no support for Markdown's reference style images in Markua. One image syntax in two modes is plenty enough to remember.

The optional figure caption is described in the [Figures](#figures) section below; the alt text and image path are described below.

## Alt text

In the Markua image syntax, just as with the Markdown image syntax, the optional alt text is in square brackets before the image:
`![Optional Alt Text](path/to/image.png "Optional Figure Caption")`

The alt text is text which is intended to take the place of the image if the image itself cannot be seen. The obvious use case is for readers with visual disabilities who are using a screen reader, but it also includes audiobooks and ebook readers which do not display images.

While the alt text is optional, it is important to have alt text. This is one reason why the image syntax puts it in the square brackets before the image path: you need to type the square brackets whenever inserting an image, so you might as well type some alt text. Empty square brackets look ugly--like a mistake--and it's a mistake to ignore the needs of readers with visual disabilities.

The alt text should not be the same thing as the figure caption, if the figure caption is present. (Imagine having your screen reader read identical alt text and figure captions to you.) Instead, the alt text should be descriptive of the image content, while the figure caption can be more creative. For example, a figure caption may be "Washington Crossing the Delaware" and the alt text could be "Denzel Washington riding a jet ski in a river". Having good alt text would enable readers who cannot see the image to still get the joke which the figure caption makes.

## Image path

The `path/to/image.png` part is the relative path to the image inside the `images` directory. The `images/` directory is not included in the path in the Markua manuscript; it is present in the generated HTML.

All images must be inside the `images` directory or one of its subdirectories. Implementors of Markua Processors must ensure they do not support navigating upward with `../` in paths.

A file called `foo.jpg` in the `images` directory is referenced as `![](foo.jpg)` -- not as `![](/foo.jpg)`, `![](images/foo.jpg)` or  `![](/images/foo.jpg)`.

A file called `bar.png` in a subdirectory `foo` of the images directory is referenced as `![](foo/bar.png)` -- not as `![](/foo/bar.png)`, `![](images/foo/bar.png)` or  `![](/images/foo/bar.png)`.

W> In Leanpub Flavoured Markdown, we included the `images/` in the path of all images. This is not supported in Markua. Not only is it redundant, it incorrectly implies that the directory could be named anything, which is not the case. So, if there is images/ in a path, a Markua processor **must** assume this is the name of a directory *inside* the images directory.

## Supported Image Types

Markua supports GIF, PNG, JPEG and SVG images. All images must be located inside the `images` directory, regardless of type. The images must have the correct file extension for their type. Markua processors do not need to parse images to determine their type.

The supported file extensions are:

.gif
: The file is treated as a GIF image.

.jpg
: The file is treated as a JPEG image.

.jpeg
: The file is treated as a JPEG image.

.png
: The file is treated as a PNG image.

.svg
: The image is treated as an SVG image.

.svgz
: The image is treated as an SVG image which has been zipped.

.xml
: The image is treated as an SVG image.

{#inlineimages}
## Inline Images

Images can be inserted inline in the flow of text in a paragraph. When an image is inserted inline, it must be positioned where it is inserted -- it cannot be floated and repositioned by Markua processors.

An inline image cannot have a caption. If a caption is present, a Markua processor will ignore it. (A Markua processor may add a warning to the list of warnings which are reported in book generation, but no warning is added to the text itself.)

### Examples

{#inline_images_1}
#### Example 1: Inline Images with Alt Text

Images can be inserted inline with alt text. Again, the alt text is intended to be read or heard instead of the image by readers who can't see the image, so it's important.

##### Markua Syntax

{#input_inline_images_1}
```
Markua has a spiffy ![Markua two trees logo](markua-logo-small.png) logo!
```

##### HTML Output

{#output_inline_images_1}
```
<p>Markua has a spiffy <img href="images/markua-logo-small.png" alt="Markua two trees logo"/> logo!</p>
```

{#inline_images_2}
#### Example 2: Inline Images with no Alt Text

Images can be inserted inline with no alt text.

##### Markua Syntax

{#input_inline_images_2}
```
Markua has a spiffy ![](markua-logo-small.png) logo!
```

##### HTML Output

{#output_inline_images_2}
```
<p>Markua has a spiffy <img href="images/markua-logo-small.png"/> logo!</p>
```

{#inline_images_4}
#### Example 3: Inline Images Incorrectly Having a Caption

An inline image cannot have a caption. If one is present, it is ignored.

##### Markua Syntax

{#input_inline_images_1}
```
Markua has a spiffy ![Markua two trees logo](markua-logo-small.png "This caption is ignored") logo!
```

##### HTML Output

{#output_inline_images_1}
```
<p>Markua has a spiffy <img href="images/markua-logo-small.png" alt="Markua two trees logo"/> logo!</p>
```

## Figures

The most powerful way to insert an image in Markua is as a Figure. To do this you add an image as a block element, separated like any other block element by blank lines above and below it.

A Figure can have a caption, which is shown associated with the image (typically above or below it). This caption shows up in two places:

1. Near the image, typically above or below it, per the preference of the Markua Processor.
2. As the name of the Figure in the List of Illustrations (a.k.a. Table of Figures), if one is generated for the book. The caption name serves as the text, and it is a crosslink to the image caption associated with the figure itself.

Like the alt text, the figure caption is optional.

A figure can also have two attributes: `float` and `width`. These are optional, and are expressed in an attribute list above the image. These turn into inline style tags in the HTML, so if you find that distasteful, then don't do it. (You can always add a `class` attribute to an image, and style that class yourself if you prefer.)

`float`
: The `float` refers to where on the page the image is floated, and can have value of `left`, `right` or `none`. The default is `none`. If the value is `left` the image is floated left; if the value is `right` the image is floated right. If the value is `none`, the image is not floated. Instead, the image is centered on the page, and text does not wrap around it. The `none` value is equivalent to not specifying a value of `float`. Regardless of the value of `float`, the figure caption (if present) is positioned near the image per the preference of the Markua processor.

`width`
: The `width` specifies the width of the image. It is either `auto`, `fullbleed` or an integer between between `1` and `100` inclusive. The default is `auto`, which means to respect the actual size of the image, with a default maximum width of 100% of the page, respecting margins. The value of `fullbleed` means to advise a Markua Processor generating a PDF to resize the image to the full width of the page, ignoring margins. (In the HTML output this just adds a class of `fullbleed` and sets the width to `100%`, and CSS can be used to do whatever the author or book designer chooses to accomplish the fullbleed effect.) The integer values between 1 and 100 mean to resize the image to that percentage width of the page, respecting margins--so `100` means to be 100% of the usable page width, but not spilling into the margins.

### Examples

{#figures_1}
#### Example 1: Figures with Alt Text and a Caption

Ideally, a figure should have both alt text and a caption. The alt text is intended for readers who can't see the image, and the caption is intended to complement the image.

##### Markua Syntax

{#input_figures_1}
```
Markua has a spiffy logo:

![the word Markua with the two asterisk trees beside it](markua-logo.png "The Markua Logo")

Thanks Justin, it was fun making the logo with you!
```

##### HTML Output

{#output_figures_1}
```
<p>Markua has a spiffy logo:</p>
<div class="figure">
  <img href="images/markua-logo.png" alt="the word Markua with the two asterisk trees beside it"/>
  <p class="caption">The Markua Logo</p>
</div>
<p>Thanks Justin, it was fun making the logo with you!</p>
```

{#figures_2}
#### Example 2: Figures with no Alt Text or Caption

Images can be inserted as a figure even with no alt text or caption. If this is done, the image is still styled as a figure, but the image has no caption and does **not** show up in the List of Illustrations.

##### Markua Syntax

{#input_figures_2}
```
Markua has a spiffy logo:

![](markua-logo.png)

Thanks Justin, it was fun making the logo with you!
```

##### HTML Output

{#output_figures_2}
```
<p>Markua has a spiffy logo:</p>
<div class='figure'>
  <img href="images/markua-logo.png"/>
</div>
<p>Thanks Justin, it was fun making the logo with you!</p>
```

{#figures_3}
#### Example 3: Figures with Alt Text but no Caption

The alt text and caption are both optional. This example shows a figure with alt text but no caption.

##### Markua Syntax

{#input_figures_3}
```
Markua has a spiffy logo:

![the word Markua with the two asterisk trees beside it](markua-logo.png)

Thanks Justin, it was fun making the logo with you!
```

##### HTML Output

{#output_figures_3}
```
<p>Markua has a spiffy logo:</p>
<div class="figure">
  <img href="images/markua-logo.png" alt="the word Markua with the two asterisk trees beside it"/>
</div>
<p>Thanks Justin, it was fun making the logo with you!</p>
```

{#figures_4}
#### Example 4: Figures with a Caption but no Alt Text

The alt text and caption are both optional. This example shows a figure with a caption but no alt text.

##### Markua Syntax

{#input_figures_4}
```
Markua has a spiffy logo:

![](markua-logo.png "The Markua Logo")

Thanks Justin, it was fun making the logo with you!
```

##### HTML Output

{#output_figures_4}
```
<p>Markua has a spiffy logo:</p>
<div class="figure">
  <img href="images/markua-logo.png"/>
  <p class="caption">The Markua Logo</p>
</div>
<p>Thanks Justin, it was fun making the logo with you!</p>
```

{#figures_5}
#### Example 5: A Figure with `float` Attribute and a Percentage `width` Attribute

This example shows a figure which is floated `left` and which has a `width` of half the print area on the page.

##### Markua Syntax

{#input_figures_5}
```
Markua has a spiffy logo:

{float: "left", width: "50%"}
![the word Markua with the two asterisk trees beside it](markua-logo.png "The Markua Logo")

Thanks Justin, it was fun making the logo with you!
```

##### HTML Output

{#output_figures_5}
```
<p>Markua has a spiffy logo:</p>
<div class="figure">
  <img href="markua-logo.png" style="float: left; width: 50%;" alt="the word Markua with the two asterisk trees beside it"/>
  <p class="caption">The Markua Logo</p>
</div>
<p>Thanks Justin, it was fun making the logo with you!</p>
```

{#figures_6}
#### Example 6: A Figure with a `width` Attribute of `fullbleed`

This example shows a figure which has a `width` attribute of `fullbleed`. Note that this sets a `class` of `fullbleed` and an inline style `width` of `100%`.

##### Markua Syntax

{#input_figures_6}
```
Markua has a spiffy logo:

{width: "fullbleed"}
![the word Markua with the two asterisk trees beside it](markua-logo.png "The Markua Logo")

Thanks Justin, it was fun making the logo with you!
```

##### HTML Output

{#output_figures_6}
```
<p>Markua has a spiffy logo:</p>
<div class="figure">
  <img href="markua-logo.png" class="fullbleed" style="width: 100%;" alt="the word Markua with the two asterisk trees beside it"/>
  <p class="caption">The Markua Logo</p>
</div>
<p>Thanks Justin, it was fun making the logo with you!</p>
```

{#figures_7}
#### Example 7: Figures Separated With One Newline

In Markua, adding a single newline makes a `<br/>` tag, not a new paragraph.

If an image is inserted on its own line, with single newlines above and below it, it is inserted as an inline figure inside the paragraph, at that position exactly if not floated, or near that position if floated.

##### Markua Syntax

{#input_figures_7}
```
This is paragraph 1.

Markua has a spiffy logo:
![the word Markua with the two asterisk trees beside it](markua-logo.png "The Markua Logo")
Thanks Justin, it was fun making the logo with you!

This is paragraph 3.
```

##### HTML Output

W> TODO - do we add the br tags or not for inline figures?

{#output_figures_7}
```
<p>This is paragraph 1.</p>
<div class="para">Markua has a spiffy logo:<br/>
  <div class="figure">
    <img href="images/markua-logo.png" alt="the word Markua with the two asterisk trees beside it"/>
    <p class="caption">The Markua Logo</p>
  </div><br/>
  Thanks Justin, it was fun making the logo with you!
</div>
<p>This is paragraph 3.</p>
```