# Markua Syntax Quick Reference

Markua syntax is heavily based on Markdown syntax, and is adapted for the needs of books and documents. This is a quick reference to all of Markua's syntax, focusing on the happy path of how you are supposed to write Markua, and ignoring the complex edge cases. In some cases, the HTML that is generated is mentioned.

To learn why Markua is the way it is, and for the proper specification of Markua and of the HTML produced, read the rest of the spec. If you just want to know how to type proper Markua and assume that everything else just works, read this.

## Text Formatting

* To produce *italic text*, surround it with either `_one underscore_` (producing `<i>`) or `*one asterisk*` (producing `<em>`).
* To produce **bold text**, surround it with either `__two underscores__` (producing `<b>`) or `**two asterisks**` (producing `<strong>`).
* To produce ***bold + italic text***, surround it with either `__three underscores__` (producing `<b><i>`), `**three asterisks**` (producing `<strong><em>`).
* To produce ____underlined text____, surround it with `____four underscores____` (producing `<u>`). (Usually italic text is preferred to underlined text, but not always. The syntax for underlined text is gross, but this is a tradeoff.)
* To produce ~~strikethrough text~~, surround it with `~~two tildes~~`.
* To produce superscript like the 3 in 5^3^ = 125, surround it with carets like `5^3^ = 125`.
* To produce subscript like the 2 in H~2~O, surround it with single tildes like `H~2~O`.

## Paragraphs, Poetry and Whitespace

A paragraph is text with a blank line both above and below it. This produces a `<p>` tag in HTML.

The distinguishing thing about a paragraph is that there is nothing else distinguishing about it. All block elements that are not some specialized type (like a heading) are paragraphs. Note that since two newlines are added between all Markua files during the concatenation of multiple-file Markua documents, there is an assumed blank line at the top and bottom of each Markua file. So, you cannot make a paragraph (or any block element) span multiple Markua source files.

A single line break produces a forced line break, and a `<br/>` tag in HTML.

Whitespace (either spaces or tabs) is preserved at the beginning of a line.

You can write most poetry without any special formatting characters, such as the following:

```
I grant I never saw a goddess go;
My mistress when she walks treads on the ground.
    And yet, by heaven, I think my love as rare
    As any she belied with false compare.
```

If you want to write poetry like e e cummings, you need to use a code block:

~~~
{code: poetry}
```
i am a cat
                        a        l a z y          cat
         me   ow
```
~~~

Whitespace is stripped from the ends of lines and files. (Markdown's "two space trick" to force a line break is not needed in Markua, since a single line break produces that already.)

## File Structure

A Markua document can be written in one file or multiple manuscript files.

If the multiple file approach is used, the listed files are first concatenated together by a Markua Processor to produce one temporary Markua manuscript file, and that one file is used as the input. The Markua Processor generates PDF, EPUB, MOBI and/or HTML output.

Importantly, in order to avoid a number of bugs, the files are not just concatenated together simply--they must be concatenated together with two newlines added between the end of each file and the beginning of the next file, in order to separate the content of the two files with one blank line between them.

Because of this, a paragraph (or any other block element) cannot span multiple manuscript files.

## Resources

Markua books can include various types of resources. Resources vary in three different ways:

1. Insertion: Span and Figure
2. Location: Local and Web
3. Type: Image, Code, Math, Text, Audio and Video

The syntax to define and insert a resource is as follows:

```
![Optional Alt Text](resource_path_or_url "Optional Figure Caption")
```

This syntax is similar to Markdown's inline image insertion syntax. Markdown's reference style image syntax is not supported in Markua.


Span
: The resource is inserted as part of the flow of text of a paragraph.

Figure
: The resource is inserted as a figure, either nested in a paragraph like a block quote or as a top-level element.

When inserting an resource as a span element in the flow of a paragraph, Markua Processors will want to use a very small (possibly emoji-sized) thumbnail for the resource. Otherwise, the paragraph would quickly look ridiculous, as a typical resource thumbnail is many times the height of a typical line of text.



The location of the resource can either be local or a URL.

All local resources are stored inside a `resources` directory, whose name is not part of the path. A file called `foo.jpg` in the `resources` directory is referenced as `![](foo.jpg)` -- not as `![](/foo.jpg)`, `![](resources/foo.jpg)` or  `![](/resources/foo.jpg)`.

Web resources are identified by URL. Both `http:` and `https:` resources must be supported.

Resources